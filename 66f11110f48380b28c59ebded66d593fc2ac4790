{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3cce4ff8_f2efa150",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-29T09:28:58Z",
      "side": 1,
      "message": "This means that by default (when there\u0027s no configuration), the system will have no network connectivity: both ipv4 and ipv6 are presence containers which \"are not there\".\n\nAs a minimum, the devices themselves should ship with some default config JSONs which enable both IPv4 and IPv6 on all interfaces. That would still allow the operator to disable all network access remotely, and I smell that there will be some truck rolls to fix this :(, but that\u0027s what the IETF model says I\u0027m afraid. Can you perhaps create and install these JSONs from this commit? Afterwards, a br2-external patch can hook these into the initial YANG provisioning.",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c706f853_ecf64566",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2021-06-29T16:50:12Z",
      "side": 1,
      "message": "I\u0027m not sure how to initialize such JSON \"startup\" file because for enslaved links the presence containers are not supposed to be there (at least that is how I understand it).\n\nSo I have created a JSON data file where br0 has ipv4/6 enabled and it is disabled for the remaining interfaces.",
      "parentUuid": "3cce4ff8_f2efa150",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90d03310_70490537",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-30T09:16:57Z",
      "side": 1,
      "message": "Sorry for that detour via default config, it seems that we\u0027ve come up with something better during the call. The motivation is to make it hard to lose network access.\n\n- if an interface is not listed in the `running` DS, the drop-in .network file in /run is removed (and the systemwide default takes over)\n- there will be a new `must` which says that either the entire interface is enabled, or there\u0027s an ipv4/enabled\u003dtrue, or there\u0027s an ipv6/enabled\u003dtrue, or there\u0027s a valid bridge config\n\nThis also means that there will have to be \"something\" which creates the operational DS from scratch based on actual network devices which are configured in the kernel. I.e., we can no longer rely on sysrepo\u0027s implicit copying of stuff from running to operational because there will be interfaces which are not \"configured via YANG\", but which have a config from a systemwide default. I don\u0027t know if it\u0027s implemented already, perhaps it is. If not, there\u0027s no need to implement that in this commit, but it\u0027s something to keep in mind as a next step.",
      "parentUuid": "c706f853_ecf64566",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "319ad0c6_03324b7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-09T14:14:51Z",
      "side": 1,
      "message": "The first part is done, but now I don\u0027t know if there\u0027s already some code that creates and deletes the interfaces in the operational DS.",
      "parentUuid": "90d03310_70490537",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5cc13b6_1679035e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2021-07-13T13:59:32Z",
      "side": 1,
      "message": "Can you give me an example where this would be a problem? I\u0027m not sure I 100% follow",
      "parentUuid": "319ad0c6_03324b7a",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27067776_bb8bf40b",
        "filename": "src/system/IETFInterfacesConfig.cpp",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-29T09:28:58Z",
      "side": 1,
      "message": "It would be nice to explicitly say it here that this handles the presence container as well: if the container is not present, then the \"enabled\" leaf will not be there, and therefore this check returns true. That\u0027s due to the way how sysrepo works.",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7748d88_a035f6e3",
        "filename": "src/system/IETFInterfacesConfig.cpp",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2021-06-29T16:50:12Z",
      "side": 1,
      "message": "Done.\n\nI think you meant to write \"this check returns false\".",
      "parentUuid": "27067776_bb8bf40b",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9ca838f_2831a72b",
        "filename": "src/system/IETFInterfacesConfig.cpp",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-30T09:16:57Z",
      "side": 1,
      "message": "yup, thanks",
      "parentUuid": "c7748d88_a035f6e3",
      "revId": "66f11110f48380b28c59ebded66d593fc2ac4790",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}