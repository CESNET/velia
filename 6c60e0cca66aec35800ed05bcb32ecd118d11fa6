{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c3016a05_0b492d39",
        "filename": "src/ietf-hardware/IETFHardware.cpp",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-19T08:40:45Z",
      "side": 1,
      "message": "nit: whitespace",
      "range": {
        "startLine": 86,
        "startChar": 60,
        "endLine": 86,
        "endChar": 61
      },
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2294a3a_1ef846bb",
        "filename": "src/ietf-hardware/IETFHardware.cpp",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2023-05-23T05:50:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3016a05_0b492d39",
      "range": {
        "startLine": 86,
        "startChar": 60,
        "endLine": 86,
        "endChar": 61
      },
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f8634ae_b07c1556",
        "filename": "src/ietf-hardware/IETFHardware.cpp",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-19T08:40:45Z",
      "side": 1,
      "message": "random unactionable rant: I want Python\u0027s list comprehension in C++ :)",
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa77429b_15e66222",
        "filename": "src/ietf-hardware/IETFHardware.cpp",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2023-05-23T05:50:42Z",
      "side": 1,
      "message": "Yep. Actually, in python, one would write something like `return list(map.keys())` or similar.\n\nI thought about using std::transform here (because the code has just a simple idea: Return me the keys from the map) and I like fold-like transformations from functional programming. But I hate the C++ implementation of those (iterators everywhere, it\u0027s unreadable). Perhaps std::ranges might help?",
      "parentUuid": "7f8634ae_b07c1556",
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a1e1f68_a20b2703",
        "filename": "src/ietf-hardware/IETFHardware.cpp",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-23T19:25:42Z",
      "side": 1,
      "message": "yeah",
      "parentUuid": "aa77429b_15e66222",
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a20ee4b_564d018c",
        "filename": "src/ietf-hardware/IETFHardware.h",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-19T08:40:45Z",
      "side": 1,
      "message": "nit: extra space",
      "range": {
        "startLine": 76,
        "startChar": 50,
        "endLine": 76,
        "endChar": 51
      },
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50b5c2c9_51464eca",
        "filename": "src/ietf-hardware/IETFHardware.h",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2023-05-23T05:50:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a20ee4b_564d018c",
      "range": {
        "startLine": 76,
        "startChar": 50,
        "endLine": 76,
        "endChar": 51
      },
      "revId": "6c60e0cca66aec35800ed05bcb32ecd118d11fa6",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}