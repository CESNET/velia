{
  "comments": [
    {
      "key": {
        "uuid": "8991cf7e_540e2156",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-25T19:35:47Z",
      "side": 1,
      "message": "please explain why this is a good idea. I know we talked about this during Tuesday\u0027s (?) call, I remember that I was initially against this because I wanted to implement this at the state manager\u0027s output, and then you said something which made me change my mind. I don\u0027t remember what was that.",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "964246b4_dba9b7ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2020-06-30T08:20:38Z",
      "side": 1,
      "message": "Well there is a problem that systemd sometimes emit PropertyChanged on a unit but the actual unit state (ActiveState and SubState, e.g. \"loaded running\" or \"activating auto-restart\") may not change.\n\nTherefore it sometimes happens that the code calls updateState from state A to state A several times in a row.\n\nThis is not not actually bad or wrong (it is actually only a \"not-so-cheap\" no-op on a manager) but it is pointless to do that.",
      "parentUuid": "8991cf7e_540e2156",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "522c0082_3c106688",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-01T14:48:19Z",
      "side": 1,
      "message": "I thought that we talked about filtering these state changes within the source of the event (i.e., in the systemd handler). That would make sense to me because it\u0027s \"nice\" to have compact logs, etc (and I think that\u0027s actually that nice argument that you presented during the call).\n\nHowever, that\u0027s not what this patch is doing; this fix is not in the \"input source\" (a part which listens to D-Bus events related to systemd). Given that it\u0027s already in the manager, and manager has -- by definition -- access to the output, aggregated state, why don\u0027t just filter out these updates at the very end of the pipeline? I.e., keep the \"last output state\" as a member variable, then once you\u0027re in computeOutput (which will once again be upon each update of any input), walk all cached inputs, determine their maximum, compare that to the previous state, store the previous state, and if these were different, fire a signal.",
      "parentUuid": "964246b4_dba9b7ac",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60787aea_767ecb38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2020-07-06T09:35:34Z",
      "side": 1,
      "message": "\u003e I thought that we talked about filtering these state changes within the source of the event\n\nI thought otherwise, but lately I forget things so you might be right.\nI wanted to do this inside the manager in order to avoid duplicated code in the inputs (in case some other input will behave like this, e.g. cla-sysrepo restarts and goes from green to green).\n\nAlso I wanted to do this and as soon as possible in the manager (so the computeOutput is not executed unnecessarily when the input\u0027s state has not actually changed.",
      "parentUuid": "522c0082_3c106688",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22a765c5_07266f71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-10T13:11:12Z",
      "side": 1,
      "message": "\u003e I wanted to do this inside the manager in order to avoid duplicated code in the inputs (in case some other input will behave like this, e.g. cla-sysrepo restarts and goes from green to green).\n\nI (vaguely) remember that you pointed out to log clarity as a benefit of that \"early filtering\". I don\u0027t care that much either way, i.e., I won\u0027t mind if the sources do not filter at all.\n\n\u003e Also I wanted to do this and as soon as possible in the manager (so the computeOutput is not executed unnecessarily when the input\u0027s state has not actually changed.\n\nBut that means that there will still be duplicate \"final outgoing transition\" when you\u0027ve got two inputs, A and B, that are currently in the same state, let\u0027s call it WARNING. The B transitions to OK, so this patch notices that it\u0027s indeed a real change, and calls into manager\u0027s output processing, which walks all cached inputs and notices that the new state is WARNING, and notifies about that even though the previous final state was also WARNING. There\u0027s no way around that, the code will always have to consult that cache. And it\u0027s also super-cheap because hey, it\u0027s a simple data structure that\u0027s super-easy to iterate through.\n\nIn my opinion, this patch adds code which is not enough to solve the real problem (\"I\u0027m getting extra transitions at the very end\"). You\u0027ll need that code anyway, so why not cut the middle man?",
      "parentUuid": "60787aea_767ecb38",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c6602f_a323d3c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2020-07-13T07:31:32Z",
      "side": 1,
      "message": "You are indeed right. I missed that case",
      "parentUuid": "22a765c5_07266f71",
      "revId": "a0b16daf92fe9da43868312e1f401ca7f6a4a131",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    }
  ]
}